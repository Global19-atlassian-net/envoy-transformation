syntax = "proto3";

package envoy.api.v2.filter.http;

option go_package = "transformation";

// [#protodoc-title: Lambda]
// Lambda :ref:`configuration overview <config_http_filters_lambda>`.
message Transformations {
    map<string, Transformation> transformations = 1;
}

// [#proto-status: experimental]
message Transformation {
    // Template is in the transformed request language domain
    // currently both are JSON
    oneof transformation_type {
        TransformationTemplate transformation_template = 1;
    }
}

message Extraction {
    string header = 1;
    // what information to extract. if extraction fails the result is 
    // an empty value.
    string regex =  2;
    uint32 subgroup = 3;
}

message TransformationTemplate {
    bool advanced_templates = 1;
    // Extractors are in the origin request language domain
    map<string, Extraction> extractors = 2;

    map<string, InjaTemplate> headers = 3;

    oneof body_transformation {
        InjaTemplate body = 4;
        Passthrough passthrough = 5;
        MergeExtractorsToBody merge_extractors_to_body = 6;
    }
}

/*
custom functions:
header_value(name) -> from the original headers
extracted_value(name, index) -> from the extracted values
*/
message InjaTemplate {
    string text = 1;
}

message Passthrough {
}

message MergeExtractorsToBody {
}